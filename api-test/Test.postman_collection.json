{
	"info": {
		"_postman_id": "eee29401-863b-4e88-a8a4-9c1bba26b46f",
		"name": "API Ã–vningar",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41615458"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": ".LoginSomAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Fixed syntax for accessing response JSON\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set('base_url','http://localhost:5000/api/')"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admin@admin.com\",\r\n  \"password\": \"admin123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}login",
							"host": [
								"{{base_url}}login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "AllProducts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set('base_url','http://localhost:5000/api/')"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Fixed syntax for accessing response JSON\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is an array\", function () {\r",
									"  pm.expect(pm.response.json()).to.be.an('array');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}products",
							"host": [
								"{{base_url}}products"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProductById=1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set('base_url','http://localhost:5000/api/')\r",
									"pm.environment.set(\"productId\",1)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let productId = pm.environment.get(\"productId\");\r",
									"let productList = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"productList\", productList);\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is an array\", function () {\r",
									"  pm.expect(pm.response.json()).to.be.an('array');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}products",
							"host": [
								"{{base_url}}products"
							]
						}
					},
					"response": []
				},
				{
					"name": "NewProduct",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set('base_url','http://localhost:5000/api/')"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Status Code:\", pm.response.code);\r",
									"console.log(\"Response Body:\", pm.response.text());\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check if response has valid JSON or not 401\", function () {\r",
									"    if (pm.response.text()) {\r",
									"        try {\r",
									"            const jsonData = pm.response.json();\r",
									"            pm.expect(jsonData.status).to.not.eql(401);\r",
									"        } catch (e) {\r",
									"            console.warn(\"Not JSON:\", e);\r",
									"        }\r",
									"    } else {\r",
									"        console.warn(\"Response body is empty\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"Test\",\r\n    \"Price\": 500,\r\n    \"CategoryId\": 1,\r\n    \"Description\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}products",
							"host": [
								"{{base_url}}products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "AllCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Fixed syntax for accessing response JSON\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is an array\", function () {\r",
									"  pm.expect(pm.response.json()).to.be.an('array');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set('base_url','http://localhost:5000/api/')"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}categories",
							"host": [
								"{{base_url}}categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "NewCategorie",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set('base_url','http://localhost:5000/api/')"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Status Code:\", pm.response.code);\r",
									"console.log(\"Response Body:\", pm.response.text());\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check if response has valid JSON or not 401\", function () {\r",
									"    if (pm.response.text()) {\r",
									"        try {\r",
									"            const jsonData = pm.response.json();\r",
									"            pm.expect(jsonData.status).to.not.eql(401);\r",
									"        } catch (e) {\r",
									"            console.warn(\"Not JSON:\", e);\r",
									"        }\r",
									"    } else {\r",
									"        console.warn(\"Response body is empty\");\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "name",
								"value": "test123",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}categories",
							"host": [
								"{{base_url}}categories"
							],
							"query": [
								{
									"key": "name",
									"value": "test",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GetAPI",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set('base_url','http://localhost:5000/api/')\r",
							"pm.collectionVariables.set('product_id', 10)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Text in body is Hello World!\", () => {\r",
							"    pm.expect(pm.response.text()).to.eql(\"Hello World!\")\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "productList",
			"value": "",
			"type": "string"
		}
	]
}